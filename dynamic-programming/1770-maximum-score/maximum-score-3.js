// n == ns.length
// m == ms.length
// 1 <= m <= 103
// m <= n <= 105
// -1000 <= ns[i], ms[i] <= 1000

const maximumScore = (ns, ms) => 
  ms.length == 1 ? Math.max(first(ns) * first(ms), last(ns) * first(ms)) :
  Math.max(
    first(ns) * first(ms) + maximumScore(tail(ns), tail(ms)),
    last(ns) * first(ms) + maximumScore(heads(ns), tail(ms)),
  );

const first = (xs) => xs[0];
const last = (xs) => xs[xs.length - 1];
const tail = (xs) => xs.slice(1);
const heads = (xs) => xs.slice(0, -1);


const { assert } = require('./__utils/assert');

assert(14, maximumScore([1, 2, 3], [3, 2, 1]));
assert(102, maximumScore([-5, -3, -3, -2, 7, 1], [-10, -5, 3, 4, 6]));
assert(
  6861161,
  maximumScore(
    [555, 526, 732, 182, 43, -537, -434, -233, -947, 968, -250, -10, 470, -867, -809, -987, 120, 607, -700, 25, -349, -657, 349, -75, -936, -473, 615, 691, -261, -517, -867, 527, 782, 939, -465, 12, 988, -78, -990, 504, -358, 491, 805, 756, -218, 513, -928, 579, 678, 10],
    [783, 911, 820, 37, 466, -251, 286, -74, -899, 586, 792, -643, -969, -267, 121, -656, 381, 871, 762, -355, 721, 753, -521]
  )
);

// console.log(maximumScore([-947,897,328,-467,14,-918,-858,-701,-518,-997,22,259,-4,968,947,582,-449,895,-121,-403,633,490,64,543,-396,-997,841,-398,247,297,-147,-708,804,-199,-765,-547,-599,406,-223,-11,663,746,-365,-859,256,-25,919,-334,490,-511,865,-139,-968,961,-793,451,317,645,-294,240,-312,-822,961,-572,309,579,161,780,525,-622,-511,423,946,-28,-199,822,-123,-316,-913,113,-458,-428,-414,49,922,722,-854,323,-219,581,302,124,164,31,727,186,308,-936,-937,-862,939,213,966,-74,-76,-1,521,777,-966,454,-199,526,-895,447,-749,-518,-639,849,-771,979,-760,-763,-601,-201,40,-911,207,890,-942,-352,700,267,830,-396,536,877,-896,-687,262,-60,-373,-373,526],
// [864,849,586,769,309,-413,318,652,883,-690,796,251,-648,433,1000,-969,422,194,-785,-242,-118,69,187,-925,-418,-556,88,-399,-619,-383,-188,206,-793,-9,738,-587,878,360,640,318,-399,-366,365,-291,-75,-451,-674,-199,177,862,1,11,390,-52,-101,127,-354,-717,-717,180,655,817,-898,28,-641,-35,-563,-737,283,-223,-322,-59,955,172,230,512,-205,-180,899,169,-663,-253,270,651,168,417,613,-443,980,-189,417,372,-891,-272,993,-877,906,680,-630,-328,-873,-811,78,-667,-2,190,-773,878,529,620,-951,-687,314,-989,-48,-601,-950,31,-789,-663,-480,750,-872,-358,529,-426,-111,517,750,-536,-673,370]));